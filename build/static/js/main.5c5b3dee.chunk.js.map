{"version":3,"sources":["trash.svg","Components/NavBar/NavBar.js","Components/Home/Home.js","Components/VolenteerRegistration/VolenteerRegistration.js","Components/EventTasks/EventTasks.js","Components/Admin/Admin.js","Components/CreateEvent/CreateEvent.js","Components/Login/firebase.config.js","Components/Login/Login.js","Components/PrivateRoute/PrivateRoute.js","Components/NoMatch/NoMatch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","useContext","UserContext","loggedInUser","Navbar","Brand","to","style","width","height","src","alt","Nav","className","Link","email","name","Button","variant","Home","useState","organizations","setOrganizations","useEffect","fetch","then","res","json","data","Form","inline","FormControl","marginRight","type","placeholder","map","work","key","id","photo","title","VolenteerRegistration","useParams","history","useHistory","newUser","user","organization","setUser","toString","date","description","handleBlur","e","target","value","onSubmit","method","headers","body","JSON","stringify","status","alert","push","preventDefault","onBlur","disabled","required","EventTasks","events","setEvents","loadEvents","length","fontSize","color","event","onClick","result","catch","err","console","log","background","borderRadius","cursor","Admin","allEvents","setAllEvents","loadAllEvents","Table","striped","bordered","hover","removeIcon","CreateEvent","newEvent","setEvent","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Login","setLoggedInUser","from","useLocation","state","pathname","firebase","provider","GoogleAuthProvider","signInWithPopup","displayName","replace","error","errorMessage","message","PrivateRoute","children","rest","render","location","NoMatch","position","top","left","transform","createContext","App","Provider","exact","path","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5c5b3dee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trash.143645ec.svg\";","import React, {useContext} from 'react';\r\nimport {Button, Nav, Navbar} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {UserContext} from '../../App';\r\n\r\nconst NavBar = () => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n\r\n    return (\r\n        <Navbar>\r\n            <Navbar.Brand>\r\n                <Link to=\"/\">\r\n                    <img style={{width:\"202px\", height: '60px'}} src=\"https://i.ibb.co/C1cQTyY/Group-1329.png\" alt=\"\"/>\r\n                </Link>\r\n            </Navbar.Brand>\r\n            <Nav className=\"ml-auto\">\r\n                <Nav.Link><Link to=\"/home\">Home</Link></Nav.Link>\r\n                <Nav.Link><Link to=\"/event\">My Events</Link></Nav.Link>\r\n                <Nav.Link>Donation</Nav.Link>\r\n                <Nav.Link>Blog</Nav.Link>\r\n\r\n                {\r\n                    loggedInUser.email ? <p className=\"ml-2 mt-2\"><strong>{loggedInUser.name}</strong></p> : \r\n                    <>\r\n                        <Link to=\"/login\">\r\n                            <Button variant=\"primary\" className=\"ml-2 mr-2\">Register</Button>\r\n                        </Link>\r\n                        <Link to=\"/admin\">\r\n                            <Button variant=\"dark\" className=\"ml-2\">Admin</Button>\r\n                        </Link>\r\n                    </>\r\n                }\r\n            </Nav>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nexport default NavBar;","import React, {useEffect, useState} from 'react';\r\nimport './Home.css';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport {Button, Form, FormControl} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n    const [organizations, setOrganizations] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('https://agile-sierra-24479.herokuapp.com/products')\r\n        .then(res => res.json())\r\n        .then(data => setOrganizations(data))\r\n    }, [])\r\n   \r\n    return (\r\n        <>\r\n        <NavBar />\r\n\r\n        <div className=\"topbar\">\r\n            <h1 className=\"text-center mb-4\">I grow by helping people in need.</h1>\r\n            <Form inline className=\"justify-content-center\">\r\n                <FormControl style={{width:'350px', marginRight:'0'}} type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                <Button variant=\"primary\">Search</Button>\r\n            </Form> \r\n        </div>\r\n\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                {\r\n                        organizations.map(work =>\r\n                        <div key={work.id} className=\"col-md-3 col-sm-6 col-xs-12 mb-3\">\r\n                            <Link to={`/vregistration/${work.id}`}>\r\n                                <div className=\"img\">\r\n                                    <img src={work.photo} alt=\"\" />\r\n                                </div>\r\n                                <div className=\"text-box\">\r\n                                <h2 className=\"title\">{work.title}</h2>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, {useContext, useEffect, useState} from 'react';\r\nimport {Link, useHistory, useParams} from 'react-router-dom';\r\nimport {UserContext} from '../../App';\r\nimport './VolenteerRegistration.css'\r\n\r\nconst VolenteerRegistration = () => {\r\n    const {id} = useParams();\r\n    let history = useHistory();\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        fetch('https://pure-badlands-37217.herokuapp.com/organizations/'+id)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                const newUser = {...user};\r\n                newUser.photo = data.photo;\r\n                newUser.organization = data.title;\r\n                setUser(newUser);\r\n            })\r\n    }, [])\r\n\r\n    const [user, setUser] = useState({\r\n        id: toString(id),\r\n        name: loggedInUser.name,\r\n        email: loggedInUser.email,\r\n        photo: '',\r\n        date: '',\r\n        description: '',\r\n        organization: ''\r\n    })\r\n\r\n    const handleBlur = (e) => {\r\n        const newUser = {...user};\r\n        newUser[e.target.name] = e.target.value;\r\n        setUser(newUser);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        fetch('https://pure-badlands-37217.herokuapp.com/addEvents', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(user)\r\n        })\r\n            .then(res => {\r\n                if(res.status === 200){\r\n                    alert('Registration successful!');\r\n                    history.push('/event');\r\n                }\r\n            })\r\n\r\n        e.preventDefault();\r\n    }\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <div className=\"text-center mt-4\">\r\n                <Link to=\"/home\">\r\n                    <img style={{width: '350px', height: 'auto'}} src=\"https://i.ibb.co/9nJfMcV/Group-1329.png\" alt=\"\" />\r\n                </Link>\r\n            </div>\r\n            <section className=\"register-section mt-5 mb-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"registerAsVolunteer\">\r\n                            <h2 className=\"text-center\">Register as volunteer</h2>\r\n                            <br />\r\n                            <form onSubmit={handleSubmit}>\r\n                                <input className=\"form-control\" onBlur={handleBlur} type=\"text\" name=\"name\" id=\"\" placeholder=\"Full Name\" value={loggedInUser.name} disabled/>\r\n                                <br />\r\n                                <input className=\"form-control\" onBlur={handleBlur} type=\"email\" name=\"email\" id=\"\" placeholder=\"Email\" value={loggedInUser.email} disabled/>\r\n                                <br />\r\n                                <input className=\"form-control\" onBlur={handleBlur} type=\"date\" name=\"date\" id=\"\" required />\r\n                                <br />\r\n                                <input className=\"form-control\" onBlur={handleBlur} type=\"text\" name=\"description\" id=\"\" placeholder=\"Description\" required />\r\n                                <br />\r\n                                <input className=\"form-control\" onBlur={handleBlur} type=\"text\" name=\"organization\" id=\"\" placeholder=\"Organization\" value={user.organization} />\r\n                                <br />\r\n                                    <button type=\"submit\" className=\"btn btn-primary mb-4\">Registration</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default VolenteerRegistration;","import React, {useContext, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {UserContext} from '../../App';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport './EventTasks.css';\r\n\r\nconst EventTasks = () => {\r\n    const [events, setEvents] = useState([]);\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n\r\n    const loadEvents = () => {\r\n        fetch('https://pure-badlands-37217.herokuapp.com/events?email=' + loggedInUser.email, {\r\n            method: 'GET',\r\n            headers: {'Content-Type': 'application/json'}\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => setEvents(data))\r\n    }\r\n\r\n    if (events.length === 0) {\r\n        loadEvents();\r\n    }\r\n    \r\n    const handleDelete = (id) => {\r\n        fetch(`https://pure-badlands-37217.herokuapp.com/eventDelete/${id}`, { method: 'DELETE' })\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            if (result) {\r\n                loadEvents();\r\n            }\r\n        })\r\n        \r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n         \r\n            <div className=\"container mt-5\">\r\n                {\r\n                    (events.length === 0) ? \r\n                    <div className=\"text-center\">\r\n                        <h2>You haven't registered for any events yet.</h2>\r\n                        <Link to='/home' style={{fontSize: '20px'}}>Register an event</Link>\r\n                    </div>\r\n                    : \r\n                    <>\r\n                        <div className=\"text-center mb-5\">\r\n                            <h3 className=\"text-center\">\r\n                                <span style={{color: '#4f82f1'}}>\r\n                                    {loggedInUser.name}\r\n                                </span>\r\n                            , You are registered for all of this events.\r\n                            </h3>\r\n                            <Link to='/home'>Register for an another event.</Link>\r\n                        </div>\r\n                        <div className=\"row  justify-content-around\">\r\n                            {\r\n                                events.map(event => \r\n                                    <div className=\"col-md-5 mb-4 task\">\r\n                                        <img src={event.photo} alt=\"\" />\r\n                                        <div className=\"ml-3\">\r\n                                            <h2>{event.organization}</h2>\r\n                                            <h5>Date: {event.date}</h5>\r\n                                            {/* <div className=\"mt-5\"> */}\r\n                                                <button onClick={() => handleDelete(event.id)} className=\"btn btn-danger mt-4\">Cancel</button>\r\n                                            {/* </div> */}\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>     \r\n        </>\r\n    );\r\n};\r\n\r\nexport default EventTasks;\r\n\r\n\r\n// style={{display: hide ? 'none' : 'null'}}","import React, {useEffect, useState} from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport removeIcon from '../../trash.svg'\r\n\r\nconst style = {\r\n    width: '30px', \r\n    height: '30px', \r\n    background:'#FF444A',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer'\r\n}\r\n\r\n\r\nconst Admin = () => {\r\n    const [allEvents, setAllEvents] = useState([]);\r\n\r\n    const loadAllEvents = () => {\r\n        // useEffect(() => {\r\n            fetch('https://pure-badlands-37217.herokuapp.com/allEvents')\r\n                .then(res => res.json())\r\n                .then(data => setAllEvents(data))\r\n        // }, [dp])\r\n    }\r\n\r\n    if (allEvents.length === 0) {\r\n        loadAllEvents();\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        fetch(`https://pure-badlands-37217.herokuapp.com/deleteUserEvent/${id}`, {method: 'DELETE'})\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                if (result) {\r\n                    loadAllEvents();\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"logo text-center mt-4 mb-5\">\r\n                <Link to=\"/\">\r\n                    <img src=\"https://i.ibb.co/9nJfMcV/Group-1329.png\" alt=\"\" />\r\n                </Link>\r\n            </div>\r\n\r\n            <h1 className=\"mt-5 mb-5 text-center\">Volunteer register list</h1>\r\n            \r\n            <Link to=\"/create-event\">\r\n                <h4 className=\"mb-5 text-center\">&#10010; Add event</h4>\r\n            </Link>\r\n\r\n            <Table striped bordered hover className=\"text-center\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                        <th>Registration Date</th>\r\n                        <th>Event</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        allEvents.map(event =>\r\n                            <tr className=\"text-center\">\r\n                                <td>{event.name}</td>\r\n                                <td>{event.email}</td>\r\n                                <td>{event.date}</td>\r\n                                <td>{event.organization}</td>\r\n                                <td onClick={() => handleDelete(event.id)}><img style={style} className=\"p-1\" src={removeIcon} alt=\"\" /></td>\r\n                            </tr>\r\n                            )\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Admin;","import React, {useEffect, useState} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport './CreateEvent.css'\r\n\r\nconst CreateEvent = () => {\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        fetch('https://pure-badlands-37217.herokuapp.com/organizations')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                const newEvent = {...event};\r\n                newEvent.id = (data.length + 1).toString();\r\n                setEvent(newEvent);\r\n            })\r\n    }, [])\r\n\r\n    const [event, setEvent] = useState({\r\n        id: '',\r\n        title: '',\r\n        photo: ''\r\n    })\r\n\r\n    const handleBlur = (e) => {\r\n        const newEvent = {...event};\r\n        newEvent[e.target.name] = e.target.value;\r\n        setEvent(newEvent);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        fetch('https://pure-badlands-37217.herokuapp.com/createEvents', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(event)\r\n        })\r\n        alert('Success');\r\n        history.push('/events')\r\n\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <div className=\"logo mt-5\">\r\n                <Link to=\"/\">\r\n                    <img src=\"https://i.ibb.co/9nJfMcV/Group-1329.png\" alt=\"\" />\r\n                </Link>\r\n            </div>\r\n\r\n            <section className=\"createAccount-section mt-5 mb-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <div className=\"createAccountWihEmail\">\r\n                            <h2 className=\"text-center\">Create an event</h2>\r\n                            <br />\r\n                            <form onSubmit={handleSubmit}>\r\n                                <input className=\"form-control\" onBlur={handleBlur} type=\"text\" name=\"id\" id=\"\" placeholder=\"ID\" value={event.id} disabled/>\r\n                                <br />\r\n                                <input className=\"form-control\" onBlur={handleBlur} type=\"text\" name=\"title\" id=\"\" placeholder=\"Title\" required />\r\n                                <br />\r\n                                <input className=\"form-control\" onBlur={handleBlur} type=\"text\" name=\"photo\" id=\"\" placeholder=\"Photo URL\" required />\r\n                                <br />\r\n                                <button type=\"submit\" className=\"btn btn-primary mt-3 mb-4\">Create an event</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateEvent;","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB_1uRocQv-HNRqNPkOpHv0mJQIs32P1Zo\",\r\n    authDomain: \"volunteer-service-2ee59.firebaseapp.com\",\r\n    databaseURL: \"https://volunteer-service-2ee59.firebaseio.com\",\r\n    projectId: \"volunteer-service-2ee59\",\r\n    storageBucket: \"volunteer-service-2ee59.appspot.com\",\r\n    messagingSenderId: \"1075672636016\",\r\n    appId: \"1:1075672636016:web:e3d6b38c437aa3acb072b5\",\r\n    measurementId: \"G-S7B4HHLX50\"\r\n  };\r\n\r\nexport default firebaseConfig;","import React, {useContext} from 'react';\r\nimport {Link, useHistory, useLocation} from 'react-router-dom';\r\nimport './Login.css';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\nimport {UserContext} from '../../App';\r\n\r\nconst Login = () => {\r\n    const[loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n\r\n    let {from} = location.state || {from: {pathname: \"/\"}};\r\n    if (firebase.apps.length === 0) {\r\n        firebase.initializeApp(firebaseConfig);\r\n    }\r\n    \r\n    const handleGoogleSignIn = () => {\r\n        var provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n        firebase.auth().signInWithPopup(provider)\r\n            .then(result => {\r\n                const {displayName, email} = result.user;\r\n                const SignedInUser = {name: displayName, email: email};\r\n                setLoggedInUser(SignedInUser);\r\n                history.replace(from);\r\n            })\r\n            .catch(error => {\r\n                const errorMessage = error.message;\r\n                alert(errorMessage);\r\n            });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"logo mt-5\">\r\n                <Link to=\"/\">\r\n                    <img src=\"https://i.ibb.co/9nJfMcV/Group-1329.png\" alt=\"\" />\r\n                </Link>\r\n            </div>\r\n            <div className=\"createAccountWithFbGoogle\">\r\n                <h2 className=\"mt-4\">Login</h2>\r\n                <div className =\"loginBtn\" onClick = {handleGoogleSignIn}>\r\n                    <img src = \"https://i.ibb.co/xC3RNVs/google.png\" alt = \"\" />\r\n                    <p className = \"text-middle\" > <strong>Continue with Google</strong></p>\r\n                </div >\r\n            </div >\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React, {Children, useContext} from 'react';\r\nimport {Redirect, Route} from 'react-router-dom';\r\nimport {UserContext} from '../../App';\r\n\r\nconst PrivateRoute = ({children, ...rest}) => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    return (\r\n        <Route {...rest} render={({location}) =>\r\n            loggedInUser.email ? (children) : (\r\n                <Redirect to={{pathname: \"/login\", state: {from: location}}}\r\n                />)\r\n        } />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst NoMatch = () => {\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n    return (\r\n        <div style={style}>\r\n            <h1>Error! 404, route not found.</h1>\r\n            <Link to=\"/home\" className=\"text-center\">\r\n                <p>Go to home page</p>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NoMatch;","import React, {createContext, useState} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Home from './Components/Home/Home';\r\nimport VolenteerRegistration from './Components/VolenteerRegistration/VolenteerRegistration';\r\nimport EventTasks from './Components/EventTasks/EventTasks';\r\nimport Admin from './Components/Admin/Admin';\r\nimport CreateEvent from './Components/CreateEvent/CreateEvent';\r\nimport {BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\r\nimport Login from './Components/Login/Login';\r\nimport PrivateRoute from './Components/PrivateRoute/PrivateRoute';\r\nimport NoMatch from './Components/NoMatch/NoMatch';\r\n\r\nexport const UserContext = createContext();\r\nfunction App() {\r\n  const [loggedInUser, setLoggedInUser] = useState({});\r\n  return (\r\n    <UserContext.Provider value={[loggedInUser, setLoggedInUser]}>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          \r\n          <Route exact path=\"/home\">\r\n            <Home />\r\n          </Route>\r\n          \r\n          <PrivateRoute exact path=\"/vregistration/:id\">\r\n            <VolenteerRegistration />\r\n          </PrivateRoute>\r\n          \r\n          <PrivateRoute exact exact path=\"/event\">\r\n            <EventTasks />\r\n          </PrivateRoute>\r\n\r\n          <Route exact path=\"/login\">\r\n            <Login />\r\n          </Route>\r\n\r\n          <PrivateRoute exact path=\"/admin\">\r\n            <Admin />\r\n          </PrivateRoute>\r\n\r\n          <PrivateRoute exact path=\"/create-event\">\r\n            <CreateEvent />\r\n          </PrivateRoute>\r\n\r\n          <PrivateRoute exact path=\"/events\">\r\n            <Redirect to=\"/create-event\" />\r\n          </PrivateRoute>\r\n\r\n          <Route exact path=\"*\">\r\n            <NoMatch />\r\n          </Route>\r\n\r\n        </Switch>\r\n      </Router>\r\n    </UserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}